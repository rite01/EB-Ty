{"version":3,"sources":["../../../src/services/designation/index.ts"],"sourcesContent":["/* eslint-disable camelcase */\nimport { BadRequestException, ConflictException } from '../../exceptions';\nimport { IDesignation } from '../../interfaces';\nimport { isEmpty } from '../../utils/utils';\nimport db from '../../databases/models';\n\nexport class DesignationService {\n  private designation = db.models.designation;\n\n  public async createDesignation(data: any): Promise<IDesignation> {\n    if (isEmpty(data)) throw new BadRequestException('data is empty');\n\n    const result: any = await this.designation.findOne({\n      where: { name: data.name },\n    });\n    if (result) throw new ConflictException('This designation already exists');\n\n    const createDesignation: any = await this.designation.create({\n      ...data,\n    });\n\n    return createDesignation;\n  }\n\n  public async findAllDesignations(): Promise<IDesignation[]> {\n    const designations: any = await this.designation.findAll();\n    return designations;\n  }\n\n  public async findDesignationById(\n    designationId: string,\n  ): Promise<IDesignation> {\n    if (isEmpty(designationId)) throw new BadRequestException('designation ID is empty');\n\n    const result: any = await this.designation.findOne({\n      where: { id: designationId },\n    });\n    if (!result) throw new ConflictException(\"designation doesn't exist\");\n\n    return result;\n  }\n\n  public async updateDesignation(\n    designationId: string,\n    designationData: IDesignation,\n  ): Promise<[affectedCount: number, affectedRows: any[]]> {\n    const { name, level } = designationData;\n    if (isEmpty(designationData)) throw new BadRequestException('designationData is empty');\n\n    if (name || level) {\n      const result = await this.designation.findOne({\n        where: {\n          name, level,\n        },\n      });\n      if (result) throw new ConflictException('This designation already exists');\n    }\n    const updateDesignationById: [\n      affectedCount: number,\n      affectedRows: any[],\n    ] = await this.designation.update(\n      {\n        name, level,\n      },\n      { where: { id: designationId }, returning: true },\n    );\n    if (!updateDesignationById) throw new ConflictException(\"Designation doesn't exist\");\n\n    return updateDesignationById;\n  }\n\n  public async deleteDesignation(designationId: string): Promise<number> {\n    const result = await this.designation.destroy({\n      where: { id: designationId },\n    });\n    if (!result) throw new ConflictException(\"Designation doesn't exist\");\n    return result;\n  }\n}\n"],"names":["DesignationService","createDesignation","data","isEmpty","BadRequestException","result","designation","findOne","where","name","ConflictException","create","findAllDesignations","designations","findAll","findDesignationById","designationId","id","updateDesignation","designationData","level","updateDesignationById","update","returning","deleteDesignation","destroy","db","models"],"mappings":"AACA;;;;+BAKaA;;aAAAA;;4BAL0C;uBAE/B;+CACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAER,IAAA,AAAMA,qBAAN,MAAMA;IAGEC,kBAAkBC,IAAS;;eAAxC,kBAAA,YAAiE;YAC/D,IAAIC,IAAAA,cAAO,EAACD,OAAO,MAAM,IAAIE,+BAAmB,CAAC,iBAAiB;YAElE,MAAMC,SAAc,MAAM,MAAKC,WAAW,CAACC,OAAO,CAAC;gBACjDC,OAAO;oBAAEC,MAAMP,KAAKO,IAAI;gBAAC;YAC3B;YACA,IAAIJ,QAAQ,MAAM,IAAIK,6BAAiB,CAAC,mCAAmC;YAE3E,MAAMT,oBAAyB,MAAM,MAAKK,WAAW,CAACK,MAAM,CAAC,kBACxDT;YAGL,OAAOD;QACT;;IAEaW;;eAAb,kBAAA,YAA4D;YAC1D,MAAMC,eAAoB,MAAM,MAAKP,WAAW,CAACQ,OAAO;YACxD,OAAOD;QACT;;IAEaE,oBACXC,aAAqB;;eADvB,kBAAA,YAEyB;YACvB,IAAIb,IAAAA,cAAO,EAACa,gBAAgB,MAAM,IAAIZ,+BAAmB,CAAC,2BAA2B;YAErF,MAAMC,SAAc,MAAM,MAAKC,WAAW,CAACC,OAAO,CAAC;gBACjDC,OAAO;oBAAES,IAAID;gBAAc;YAC7B;YACA,IAAI,CAACX,QAAQ,MAAM,IAAIK,6BAAiB,CAAC,6BAA6B;YAEtE,OAAOL;QACT;;IAEaa,kBACXF,aAAqB,EACrBG,eAA6B;;eAF/B,kBAAA,YAGyD;YACvD,MAAM,EAAEV,KAAI,EAAEW,MAAK,EAAE,GAAGD;YACxB,IAAIhB,IAAAA,cAAO,EAACgB,kBAAkB,MAAM,IAAIf,+BAAmB,CAAC,4BAA4B;YAExF,IAAIK,QAAQW,OAAO;gBACjB,MAAMf,SAAS,MAAM,MAAKC,WAAW,CAACC,OAAO,CAAC;oBAC5CC,OAAO;wBACLC;wBAAMW;oBACR;gBACF;gBACA,IAAIf,QAAQ,MAAM,IAAIK,6BAAiB,CAAC,mCAAmC;YAC7E,CAAC;YACD,MAAMW,wBAGF,MAAM,MAAKf,WAAW,CAACgB,MAAM,CAC/B;gBACEb;gBAAMW;YACR,GACA;gBAAEZ,OAAO;oBAAES,IAAID;gBAAc;gBAAGO,WAAW,IAAI;YAAC;YAElD,IAAI,CAACF,uBAAuB,MAAM,IAAIX,6BAAiB,CAAC,6BAA6B;YAErF,OAAOW;QACT;;IAEaG,kBAAkBR,aAAqB;;eAApD,kBAAA,YAAuE;YACrE,MAAMX,SAAS,MAAM,MAAKC,WAAW,CAACmB,OAAO,CAAC;gBAC5CjB,OAAO;oBAAES,IAAID;gBAAc;YAC7B;YACA,IAAI,CAACX,QAAQ,MAAM,IAAIK,6BAAiB,CAAC,6BAA6B;YACtE,OAAOL;QACT;;;aAtEQC,cAAcoB,eAAE,CAACC,MAAM,CAACrB,WAAW;;AAuE7C"}