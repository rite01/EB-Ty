{"version":3,"sources":["../../../src/databases/models/user.ts"],"sourcesContent":["import { Model, Sequelize } from 'sequelize';\nimport { UserRoles } from '../../constants/enum.constants';\nimport { IDataType } from '.';\n\nexport default (connection: Sequelize, DataTypes:IDataType) => {\n  class UserModel extends Model {\n    password!: string;\n\n    static associate({ roles, userProfile }) {\n      this.belongsTo(roles, {\n        foreignKey: 'roleId',\n        as: 'role',\n      });\n      this.hasOne(userProfile, {\n        foreignKey: 'userId',\n        as: 'profile_details',\n      });\n    }\n  }\n\n  UserModel.init(\n    {\n      id: {\n        allowNull: false,\n        autoIncrement: true,\n        primaryKey: true,\n        type: DataTypes.BIGINT,\n      },\n      uuid: {\n        type: DataTypes.UUID,\n        defaultValue: DataTypes.UUIDV4,\n        allowNull: false,\n      },\n      name: {\n        type: DataTypes.STRING,\n      },\n      email: {\n        type: DataTypes.STRING,\n        unique: true,\n      },\n      password: {\n        type: DataTypes.STRING,\n      },\n      phoneNumber: {\n        type: DataTypes.STRING,\n      },\n      roleId: {\n        type: DataTypes.BIGINT,\n      },\n      isActive: {\n        type: DataTypes.BOOLEAN,\n        defaultValue: true,\n      },\n      createdAt: {\n        allowNull: false,\n        type: DataTypes.DATE,\n      },\n      updatedAt: {\n        allowNull: true,\n        type: DataTypes.DATE,\n      },\n      deletedAt: {\n        allowNull: true,\n        type: DataTypes.DATE,\n      },\n    },\n    {\n      timestamps: true,\n      sequelize: connection,\n      underscored: true,\n      modelName: 'users',\n      paranoid: true,\n    },\n  );\n  UserModel.beforeCreate(async (record: any) => {\n    if (!record.roleId) {\n      const foundRole : any = await connection.models.roles.findOne({\n        where: {\n          name: UserRoles.USER,\n        },\n      });\n      if (!foundRole) {\n        throw new Error('role not found');\n      }\n      record.roleId = foundRole.id;\n    }\n    return record;\n  });\n  return UserModel as unknown as UserModel;\n};\n"],"names":["connection","DataTypes","UserModel","Model","associate","roles","userProfile","belongsTo","foreignKey","as","hasOne","init","id","allowNull","autoIncrement","primaryKey","type","BIGINT","uuid","UUID","defaultValue","UUIDV4","name","STRING","email","unique","password","phoneNumber","roleId","isActive","BOOLEAN","createdAt","DATE","updatedAt","deletedAt","timestamps","sequelize","underscored","modelName","paranoid","beforeCreate","record","foundRole","models","findOne","where","UserRoles","USER","Error"],"mappings":"AAAA;;;;+BAIA;;aAAA;;2BAJiC;+BACP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAG1B,WAAe,CAACA,YAAuBC,YAAwB;IAC7D,IAAA,AAAMC,YAAN,MAAMA,kBAAkBC,gBAAK;QAG3B,OAAOC,UAAU,EAAEC,MAAK,EAAEC,YAAW,EAAE,EAAE;YACvC,IAAI,CAACC,SAAS,CAACF,OAAO;gBACpBG,YAAY;gBACZC,IAAI;YACN;YACA,IAAI,CAACC,MAAM,CAACJ,aAAa;gBACvBE,YAAY;gBACZC,IAAI;YACN;QACF;IACF;IAEAP,UAAUS,IAAI,CACZ;QACEC,IAAI;YACFC,WAAW,KAAK;YAChBC,eAAe,IAAI;YACnBC,YAAY,IAAI;YAChBC,MAAMf,UAAUgB,MAAM;QACxB;QACAC,MAAM;YACJF,MAAMf,UAAUkB,IAAI;YACpBC,cAAcnB,UAAUoB,MAAM;YAC9BR,WAAW,KAAK;QAClB;QACAS,MAAM;YACJN,MAAMf,UAAUsB,MAAM;QACxB;QACAC,OAAO;YACLR,MAAMf,UAAUsB,MAAM;YACtBE,QAAQ,IAAI;QACd;QACAC,UAAU;YACRV,MAAMf,UAAUsB,MAAM;QACxB;QACAI,aAAa;YACXX,MAAMf,UAAUsB,MAAM;QACxB;QACAK,QAAQ;YACNZ,MAAMf,UAAUgB,MAAM;QACxB;QACAY,UAAU;YACRb,MAAMf,UAAU6B,OAAO;YACvBV,cAAc,IAAI;QACpB;QACAW,WAAW;YACTlB,WAAW,KAAK;YAChBG,MAAMf,UAAU+B,IAAI;QACtB;QACAC,WAAW;YACTpB,WAAW,IAAI;YACfG,MAAMf,UAAU+B,IAAI;QACtB;QACAE,WAAW;YACTrB,WAAW,IAAI;YACfG,MAAMf,UAAU+B,IAAI;QACtB;IACF,GACA;QACEG,YAAY,IAAI;QAChBC,WAAWpC;QACXqC,aAAa,IAAI;QACjBC,WAAW;QACXC,UAAU,IAAI;IAChB;IAEFrC,UAAUsC,YAAY;mBAAC,kBAAA,UAAOC,QAAgB;YAC5C,IAAI,CAACA,OAAOb,MAAM,EAAE;gBAClB,MAAMc,YAAkB,MAAM1C,WAAW2C,MAAM,CAACtC,KAAK,CAACuC,OAAO,CAAC;oBAC5DC,OAAO;wBACLvB,MAAMwB,wBAAS,CAACC,IAAI;oBACtB;gBACF;gBACA,IAAI,CAACL,WAAW;oBACd,MAAM,IAAIM,MAAM,kBAAkB;gBACpC,CAAC;gBACDP,OAAOb,MAAM,GAAGc,UAAU9B,EAAE;YAC9B,CAAC;YACD,OAAO6B;QACT;wBAb8BA;;;;IAc9B,OAAOvC;AACT"}