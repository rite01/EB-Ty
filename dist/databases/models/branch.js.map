{"version":3,"sources":["../../../src/databases/models/branch.ts"],"sourcesContent":["import {\n  Model, Sequelize, UUID, UUIDV4,\n} from 'sequelize';\nimport { IDataType } from '.';\n\nexport default (connection: Sequelize, DataTypes:IDataType) => {\n  class BranchModel extends Model {\n    static associate({ userProfile }) {\n      this.hasMany(userProfile, {\n        foreignKey: 'branchId',\n        as: 'branchDetails',\n        constraints: false,\n      });\n    }\n  }\n\n  BranchModel.init(\n    {\n      id: {\n        allowNull: false,\n        autoIncrement: true,\n        primaryKey: true,\n        type: DataTypes.BIGINT,\n      },\n      uuid: {\n        type: UUID,\n        defaultValue: UUIDV4,\n        allowNull: false,\n      },\n      buildingNo: {\n        type: DataTypes.INTEGER,\n      },\n      street: {\n        type: DataTypes.STRING,\n      },\n      landmark: {\n        type: DataTypes.STRING,\n      },\n      city: {\n        type: DataTypes.STRING,\n      },\n      state: {\n        type: DataTypes.STRING,\n      },\n      country: {\n        type: DataTypes.STRING,\n      },\n      zipCode: {\n        type: DataTypes.INTEGER,\n      },\n      isActive: {\n        type: DataTypes.BOOLEAN,\n        defaultValue: false,\n      },\n      createdAt: {\n        allowNull: false,\n        type: DataTypes.DATE,\n      },\n      updatedAt: {\n        allowNull: true,\n        type: DataTypes.DATE,\n      },\n      deletedAt: {\n        allowNull: true,\n        type: DataTypes.DATE,\n      },\n    },\n    {\n      timestamps: true,\n      sequelize: connection,\n      underscored: true,\n      modelName: 'branches',\n      tableName: 'branches',\n      paranoid: true,\n    },\n  );\n  return BranchModel as unknown as BranchModel;\n};\n"],"names":["connection","DataTypes","BranchModel","Model","associate","userProfile","hasMany","foreignKey","as","constraints","init","id","allowNull","autoIncrement","primaryKey","type","BIGINT","uuid","UUID","defaultValue","UUIDV4","buildingNo","INTEGER","street","STRING","landmark","city","state","country","zipCode","isActive","BOOLEAN","createdAt","DATE","updatedAt","deletedAt","timestamps","sequelize","underscored","modelName","tableName","paranoid"],"mappings":"AAAA;;;;+BAKA;;aAAA;;2BAHO;MAGP,WAAe,CAACA,YAAuBC,YAAwB;IAC7D,IAAA,AAAMC,cAAN,MAAMA,oBAAoBC,gBAAK;QAC7B,OAAOC,UAAU,EAAEC,YAAW,EAAE,EAAE;YAChC,IAAI,CAACC,OAAO,CAACD,aAAa;gBACxBE,YAAY;gBACZC,IAAI;gBACJC,aAAa,KAAK;YACpB;QACF;IACF;IAEAP,YAAYQ,IAAI,CACd;QACEC,IAAI;YACFC,WAAW,KAAK;YAChBC,eAAe,IAAI;YACnBC,YAAY,IAAI;YAChBC,MAAMd,UAAUe,MAAM;QACxB;QACAC,MAAM;YACJF,MAAMG,eAAI;YACVC,cAAcC,iBAAM;YACpBR,WAAW,KAAK;QAClB;QACAS,YAAY;YACVN,MAAMd,UAAUqB,OAAO;QACzB;QACAC,QAAQ;YACNR,MAAMd,UAAUuB,MAAM;QACxB;QACAC,UAAU;YACRV,MAAMd,UAAUuB,MAAM;QACxB;QACAE,MAAM;YACJX,MAAMd,UAAUuB,MAAM;QACxB;QACAG,OAAO;YACLZ,MAAMd,UAAUuB,MAAM;QACxB;QACAI,SAAS;YACPb,MAAMd,UAAUuB,MAAM;QACxB;QACAK,SAAS;YACPd,MAAMd,UAAUqB,OAAO;QACzB;QACAQ,UAAU;YACRf,MAAMd,UAAU8B,OAAO;YACvBZ,cAAc,KAAK;QACrB;QACAa,WAAW;YACTpB,WAAW,KAAK;YAChBG,MAAMd,UAAUgC,IAAI;QACtB;QACAC,WAAW;YACTtB,WAAW,IAAI;YACfG,MAAMd,UAAUgC,IAAI;QACtB;QACAE,WAAW;YACTvB,WAAW,IAAI;YACfG,MAAMd,UAAUgC,IAAI;QACtB;IACF,GACA;QACEG,YAAY,IAAI;QAChBC,WAAWrC;QACXsC,aAAa,IAAI;QACjBC,WAAW;QACXC,WAAW;QACXC,UAAU,IAAI;IAChB;IAEF,OAAOvC;AACT"}