{"version":3,"sources":["../../../src/controllers/designation/designation.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { IDesignation } from '../../interfaces';\nimport { CreateUserDto } from '../../dtos/user.dtos';\nimport { DesignationService } from '../../services';\n\nexport class DesignationController {\n  private designationService = new DesignationService();\n\n  /**\n   * @swagger\n   *\n   * /designation/create:\n   *   post:\n   *     tags:\n   *      - Designation\n   *     description: Cerate Designation\n   *     produces:\n   *       - application/json\n   *     parameters:\n   *       - name: body\n   *         description: user data.\n   *         in: body\n   *         required: true\n   *         schema:\n   *           $ref: '#/definitions/Create'\n   *     responses:\n   *       200:\n   *         description: success\n   * definitions:\n   *    Create:\n   *      required:\n   *          - name\n   *          - level\n   *      properties:\n   *        name:\n   *          type: string\n   *          description: User name\n   *        level:\n   *          type: enum\n   *          description: User email\n   */\n  public createDesignation = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const designationData: CreateUserDto = req.body;\n      const data: IDesignation = await this.designationService.createDesignation(designationData);\n\n      return res.status(201).json({ data, status: 200, message: 'designation created successfully' });\n    } catch (error) {\n      return next(error);\n    }\n  };\n\n  /**\n   * @swagger\n   *\n   * /designation/getAll:\n   *   get:\n   *     tags:\n   *      - Designation\n   *     description: Get all designation\n   *     produces:\n   *       - application/json\n   *     responses:\n   *       200:\n   *         description: success\n   */\n\n  public getAllDesignation = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const data: IDesignation[] = await this.designationService.findAllDesignations();\n\n      return res.status(200).json({ data, status: 200, message: 'designation fetched successfully' });\n    } catch (error) {\n      return next(error);\n    }\n  };\n\n  /**\n   * @swagger\n   *\n   * /designation/getAll/:id:\n   *   get:\n   *     tags:\n   *      - Designation\n   *     description: Get designation by id\n   *     produces:\n   *       - application/json\n   *     responses:\n   *       200:\n   *         description: success\n   */\n\n  public getDesignationById = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const { id } = req.params;\n      const data: IDesignation = await this.designationService.findDesignationById(id);\n\n      return res.status(200).json({ data, status: 200, message: 'success' });\n    } catch (error) {\n      return next(error);\n    }\n  };\n\n  /**\n   * @swagger\n   *\n   * /designation/update/:id:\n   *   patch:\n   *     tags:\n   *      - Designation\n   *     description: Update designation\n   *     produces:\n   *       - application/json\n   *     parameters:\n   *       - name: body\n   *         description: user data.\n   *         in: body\n   *         required: true\n   *         schema:\n   *           $ref: '#/definitions/Create'\n   *     responses:\n   *       200:\n   *         description: success\n   * definitions:\n   *    Create:\n   *      required:\n   *          - name\n   *          - level\n   *      properties:\n   *        name:\n   *          type: string\n   *          description: designation name\n   *        level:\n   *          type: enum\n   *          description: designation level\n   */\n\n  public updateDesignation = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const { id } = req.params;\n      const designationData: IDesignation = req.body;\n      const data = await this.designationService.updateDesignation(id, designationData);\n\n      return res.status(200).json({ data, status: 200, message: 'designation updated successfully' });\n    } catch (error) {\n      return next(error);\n    }\n  };\n\n  /**\n   * @swagger\n   *\n   * /designation/delete/:id:\n   *   delete:\n   *     tags:\n   *      - Designation\n   *     description: Role Delete\n   *     produces:\n   *       - application/json\n   *     responses:\n   *       200:\n   *         description: success\n   */\n\n  public deleteDesignation = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const { id } = req.params;\n      const data = await this.designationService.deleteDesignation(id);\n\n      return res.status(200).json({ data, status: 200, message: 'designation deleted successfully' });\n    } catch (error) {\n      return next(error);\n    }\n  };\n}\n"],"names":["DesignationController","designationService","DesignationService","createDesignation","req","res","next","designationData","body","data","status","json","message","error","getAllDesignation","findAllDesignations","getDesignationById","id","params","findDesignationById","updateDesignation","deleteDesignation"],"mappings":"AAAA;;;;+BAKaA;;aAAAA;;0BAFsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE5B,IAAA,AAAMA,wBAAN,MAAMA;;aACHC,qBAAqB,IAAIC,4BAAkB;;aAmC5CC;uBAAoB,kBAAA,UAAOC,KAAcC,KAAeC,MAAuB;gBACpF,IAAI;oBACF,MAAMC,kBAAiCH,IAAII,IAAI;oBAC/C,MAAMC,OAAqB,MAAM,MAAKR,kBAAkB,CAACE,iBAAiB,CAACI;oBAE3E,OAAOF,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;wBAAEF;wBAAMC,QAAQ;wBAAKE,SAAS;oBAAmC;gBAC/F,EAAE,OAAOC,OAAO;oBACd,OAAOP,KAAKO;gBACd;YACF;4BATkCT,KAAcC,KAAeC;;;;;aA0BxDQ;uBAAoB,kBAAA,UAAOV,KAAcC,KAAeC,MAAuB;gBACpF,IAAI;oBACF,MAAMG,OAAuB,MAAM,OAAKR,kBAAkB,CAACc,mBAAmB;oBAE9E,OAAOV,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;wBAAEF;wBAAMC,QAAQ;wBAAKE,SAAS;oBAAmC;gBAC/F,EAAE,OAAOC,OAAO;oBACd,OAAOP,KAAKO;gBACd;YACF;4BARkCT,KAAcC,KAAeC;;;;;aAyBxDU;uBAAqB,kBAAA,UAAOZ,KAAcC,KAAeC,MAAuB;gBACrF,IAAI;oBACF,MAAM,EAAEW,GAAE,EAAE,GAAGb,IAAIc,MAAM;oBACzB,MAAMT,OAAqB,MAAM,OAAKR,kBAAkB,CAACkB,mBAAmB,CAACF;oBAE7E,OAAOZ,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;wBAAEF;wBAAMC,QAAQ;wBAAKE,SAAS;oBAAU;gBACtE,EAAE,OAAOC,OAAO;oBACd,OAAOP,KAAKO;gBACd;YACF;4BATmCT,KAAcC,KAAeC;;;;;aA6CzDc;uBAAoB,kBAAA,UAAOhB,KAAcC,KAAeC,MAAuB;gBACpF,IAAI;oBACF,MAAM,EAAEW,GAAE,EAAE,GAAGb,IAAIc,MAAM;oBACzB,MAAMX,kBAAgCH,IAAII,IAAI;oBAC9C,MAAMC,OAAO,MAAM,OAAKR,kBAAkB,CAACmB,iBAAiB,CAACH,IAAIV;oBAEjE,OAAOF,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;wBAAEF;wBAAMC,QAAQ;wBAAKE,SAAS;oBAAmC;gBAC/F,EAAE,OAAOC,OAAO;oBACd,OAAOP,KAAKO;gBACd;YACF;4BAVkCT,KAAcC,KAAeC;;;;;aA2BxDe;uBAAoB,kBAAA,UAAOjB,KAAcC,KAAeC,MAAuB;gBACpF,IAAI;oBACF,MAAM,EAAEW,GAAE,EAAE,GAAGb,IAAIc,MAAM;oBACzB,MAAMT,OAAO,MAAM,OAAKR,kBAAkB,CAACoB,iBAAiB,CAACJ;oBAE7D,OAAOZ,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;wBAAEF;wBAAMC,QAAQ;wBAAKE,SAAS;oBAAmC;gBAC/F,EAAE,OAAOC,OAAO;oBACd,OAAOP,KAAKO;gBACd;YACF;4BATkCT,KAAcC,KAAeC;;;;;AAUjE"}