{"version":3,"sources":["../../../src/services/department/index.ts"],"sourcesContent":["import { BadRequestException, ConflictException } from '../../exceptions';\nimport { IDepartment } from '../../interfaces';\nimport { CreateUserDto } from '../../dtos/user.dtos';\nimport db from '../../databases/models';\nimport { isEmpty } from '../../utils/utils';\n\nconst { department } = db.models;\nexport class DepartmentService {\n  public async createDepartment(departmentData: any): Promise<IDepartment> {\n    if (isEmpty(departmentData)) throw new BadRequestException('department is empty');\n\n    const findDepartment: any = await department.findOne({\n      where: { name: departmentData.name },\n    });\n    if (findDepartment) throw new ConflictException('This department already exists');\n\n    const createDepartment: any = await department.create({\n      ...departmentData,\n    });\n\n    return createDepartment;\n  }\n\n  public async findAllDepartment(): Promise<IDepartment[]> {\n    const departments: any = await department.findAll();\n    return departments;\n  }\n\n  public async findDepartmentById(\n    departmentId: string,\n  ): Promise<IDepartment> {\n    if (isEmpty(departmentId)) throw new BadRequestException('Department ID is empty');\n\n    const findDepartment: any = await department.findOne({\n      where: { id: departmentId },\n    });\n    if (!findDepartment) throw new ConflictException(\"Department doesn't exist\");\n\n    return findDepartment;\n  }\n\n  public async updateDepartment(\n    departmentId: string,\n    departmentData: CreateUserDto,\n  ): Promise<[affectedCount: number, affectedRows: any[]]> {\n    if (isEmpty(departmentData)) throw new BadRequestException('departmentData is empty');\n\n    if (departmentData.name) {\n      const findDepartment = await department.findOne({\n        where: { name: departmentData.name },\n      });\n      if (findDepartment) throw new ConflictException('This department already exists');\n    }\n    const updateDepartmentById: [\n      affectedCount: number,\n      affectedRows: any[],\n    ] = await department.update(\n      { name: departmentData.name },\n      { where: { id: departmentId }, returning: true },\n    );\n    if (!updateDepartmentById) throw new ConflictException(\"Department doesn't exist\");\n\n    return updateDepartmentById;\n  }\n\n  public async deleteDepartment(departmentId: string): Promise<number> {\n    const result = await department.destroy({\n      where: { id: departmentId },\n    });\n    if (!result) throw new ConflictException(\"Department doesn't exist\");\n    return result;\n  }\n}\n"],"names":["DepartmentService","department","db","models","createDepartment","departmentData","isEmpty","BadRequestException","findDepartment","findOne","where","name","ConflictException","create","findAllDepartment","departments","findAll","findDepartmentById","departmentId","id","updateDepartment","updateDepartmentById","update","returning","deleteDepartment","result","destroy"],"mappings":"AAAA;;;;+BAOaA;;aAAAA;;4BAP0C;+CAGxC;uBACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAExB,MAAM,EAAEC,WAAU,EAAE,GAAGC,eAAE,CAACC,MAAM;AACzB,IAAA,AAAMH,oBAAN,MAAMA;IACEI,iBAAiBC,cAAmB;eAAjD,kBAAA,YAAyE;YACvE,IAAIC,IAAAA,cAAO,EAACD,iBAAiB,MAAM,IAAIE,+BAAmB,CAAC,uBAAuB;YAElF,MAAMC,iBAAsB,MAAMP,WAAWQ,OAAO,CAAC;gBACnDC,OAAO;oBAAEC,MAAMN,eAAeM,IAAI;gBAAC;YACrC;YACA,IAAIH,gBAAgB,MAAM,IAAII,6BAAiB,CAAC,kCAAkC;YAElF,MAAMR,mBAAwB,MAAMH,WAAWY,MAAM,CAAC,kBACjDR;YAGL,OAAOD;QACT;;IAEaU;eAAb,kBAAA,YAAyD;YACvD,MAAMC,cAAmB,MAAMd,WAAWe,OAAO;YACjD,OAAOD;QACT;;IAEaE,mBACXC,YAAoB;eADtB,kBAAA,YAEwB;YACtB,IAAIZ,IAAAA,cAAO,EAACY,eAAe,MAAM,IAAIX,+BAAmB,CAAC,0BAA0B;YAEnF,MAAMC,iBAAsB,MAAMP,WAAWQ,OAAO,CAAC;gBACnDC,OAAO;oBAAES,IAAID;gBAAa;YAC5B;YACA,IAAI,CAACV,gBAAgB,MAAM,IAAII,6BAAiB,CAAC,4BAA4B;YAE7E,OAAOJ;QACT;;IAEaY,iBACXF,YAAoB,EACpBb,cAA6B;eAF/B,kBAAA,YAGyD;YACvD,IAAIC,IAAAA,cAAO,EAACD,iBAAiB,MAAM,IAAIE,+BAAmB,CAAC,2BAA2B;YAEtF,IAAIF,eAAeM,IAAI,EAAE;gBACvB,MAAMH,iBAAiB,MAAMP,WAAWQ,OAAO,CAAC;oBAC9CC,OAAO;wBAAEC,MAAMN,eAAeM,IAAI;oBAAC;gBACrC;gBACA,IAAIH,gBAAgB,MAAM,IAAII,6BAAiB,CAAC,kCAAkC;YACpF,CAAC;YACD,MAAMS,uBAGF,MAAMpB,WAAWqB,MAAM,CACzB;gBAAEX,MAAMN,eAAeM,IAAI;YAAC,GAC5B;gBAAED,OAAO;oBAAES,IAAID;gBAAa;gBAAGK,WAAW,IAAI;YAAC;YAEjD,IAAI,CAACF,sBAAsB,MAAM,IAAIT,6BAAiB,CAAC,4BAA4B;YAEnF,OAAOS;QACT;;IAEaG,iBAAiBN,YAAoB;eAAlD,kBAAA,YAAqE;YACnE,MAAMO,SAAS,MAAMxB,WAAWyB,OAAO,CAAC;gBACtChB,OAAO;oBAAES,IAAID;gBAAa;YAC5B;YACA,IAAI,CAACO,QAAQ,MAAM,IAAIb,6BAAiB,CAAC,4BAA4B;YACrE,OAAOa;QACT;;AACF"}