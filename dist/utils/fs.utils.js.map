{"version":3,"sources":["../../src/utils/fs.utils.ts"],"sourcesContent":["/* eslint-disable no-await-in-loop */\n/* eslint-disable no-plusplus */\n/* eslint-disable no-restricted-syntax */\nimport { hashSync } from 'bcrypt';\nimport { createReadStream } from 'fs';\nimport { IRole, IUser } from '../interfaces';\nimport db from '../databases/models';\nimport { UserRoles } from '../constants/enum.constants';\n\nconst { roles } = db.models;\n\nexport const readBuffer = async (buffer: Buffer) => {\n  const dataArray = [];\n  const data = buffer.toString().split('\\n');\n  const [fields, ...userData] = data;\n  const fieldsArray = fields.split(',');\n  const getRoles = async () : Promise<IRole> => {\n    const foundRole: any = await roles.findOne({\n      where: {\n        name: UserRoles.USER,\n      },\n    });\n    return foundRole;\n  };\n\n  for (const item of userData) {\n    const test:Partial<any> = {};\n    const itemArray = item.split(',');\n\n    for (let i = 0; i < itemArray.length; i++) {\n      test[fieldsArray[i]] = itemArray[i];\n    }\n    const hashedPassword = hashSync(`${test.name.slice(0, 2).toLowerCase()}@12345`, 10);\n    test.password = hashedPassword;\n    if (!test.roleId) {\n      const result = await getRoles();\n      if (!result) {\n        throw new Error('role not found');\n      }\n      test.roleId = result.id;\n    }\n    dataArray.push(test);\n  }\n  return dataArray;\n};\n"],"names":["readBuffer","roles","db","models","buffer","dataArray","data","toString","split","fields","userData","fieldsArray","getRoles","foundRole","findOne","where","name","UserRoles","USER","item","test","itemArray","i","length","hashedPassword","hashSync","slice","toLowerCase","password","roleId","result","Error","id","push"],"mappings":"AAGA;;;;+BAQaA;;aAAAA;;wBARY;+CAGV;+BACW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE1B,MAAM,EAAEC,MAAK,EAAE,GAAGC,eAAE,CAACC,MAAM;AAEpB,MAAMH;eAAa,kBAAA,UAAOI,QAAmB;QAClD,MAAMC,YAAY,EAAE;QACpB,MAAMC,OAAOF,OAAOG,QAAQ,GAAGC,KAAK,CAAC;QACrC,MAAM,CAACC,QAAQ,GAAGC,SAAS,GAAGJ;QAC9B,MAAMK,cAAcF,OAAOD,KAAK,CAAC;QACjC,MAAMI;uBAAW,kBAAA,YAA6B;gBAC5C,MAAMC,YAAiB,MAAMZ,MAAMa,OAAO,CAAC;oBACzCC,OAAO;wBACLC,MAAMC,wBAAS,CAACC,IAAI;oBACtB;gBACF;gBACA,OAAOL;YACT;4BAPMD;;;;QASN,KAAK,MAAMO,QAAQT,SAAU;YAC3B,MAAMU,OAAoB,CAAC;YAC3B,MAAMC,YAAYF,KAAKX,KAAK,CAAC;YAE7B,IAAK,IAAIc,IAAI,GAAGA,IAAID,UAAUE,MAAM,EAAED,IAAK;gBACzCF,IAAI,CAACT,WAAW,CAACW,EAAE,CAAC,GAAGD,SAAS,CAACC,EAAE;YACrC;YACA,MAAME,iBAAiBC,IAAAA,gBAAQ,EAAC,CAAC,EAAEL,KAAKJ,IAAI,CAACU,KAAK,CAAC,GAAG,GAAGC,WAAW,GAAG,MAAM,CAAC,EAAE;YAChFP,KAAKQ,QAAQ,GAAGJ;YAChB,IAAI,CAACJ,KAAKS,MAAM,EAAE;gBAChB,MAAMC,SAAS,MAAMlB;gBACrB,IAAI,CAACkB,QAAQ;oBACX,MAAM,IAAIC,MAAM,kBAAkB;gBACpC,CAAC;gBACDX,KAAKS,MAAM,GAAGC,OAAOE,EAAE;YACzB,CAAC;YACD3B,UAAU4B,IAAI,CAACb;QACjB;QACA,OAAOf;IACT;oBAjCaL,WAAoBI"}