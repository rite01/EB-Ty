{"version":3,"sources":["../../../src/services/jwt/jwt.services.ts"],"sourcesContent":["import {\n  sign, verify, decode, JwtPayload,\n} from 'jsonwebtoken';\nimport { config } from '../../config';\n\nexport class JwtService {\n  verifyToken = async (token: string): Promise<string | JwtPayload> => {\n    const decoded = await verify(token, config.JWT.JWT_SECRET);\n    return decoded;\n  };\n\n  decodeToken = (token: string): string | JwtPayload => {\n    const decodedToken = decode(token);\n    return decodedToken;\n  };\n\n  signToken = (id: string): string => {\n    const token = sign({ id }, config.JWT.JWT_SECRET, {\n      expiresIn: config.JWT.EXPIRES_IN,\n      algorithm: 'RS256',\n    });\n\n    return token;\n  };\n}\n\nexport const jwtService = new JwtService();\n"],"names":["JwtService","jwtService","verifyToken","token","decoded","verify","config","JWT","JWT_SECRET","decodeToken","decodedToken","decode","signToken","id","sign","expiresIn","EXPIRES_IN","algorithm"],"mappings":"AAAA;;;;;;;;;;;IAKaA,UAAU,MAAVA;IAqBAC,UAAU,MAAVA;;8BAxBN;wBACgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEhB,IAAA,AAAMD,aAAN,MAAMA;;aACXE;uBAAc,kBAAA,UAAOC,OAAgD;gBACnE,MAAMC,UAAU,MAAMC,IAAAA,oBAAM,EAACF,OAAOG,cAAM,CAACC,GAAG,CAACC,UAAU;gBACzD,OAAOJ;YACT;4BAHqBD;;;;aAKrBM,cAAc,CAACN,QAAuC;YACpD,MAAMO,eAAeC,IAAAA,oBAAM,EAACR;YAC5B,OAAOO;QACT;aAEAE,YAAY,CAACC,KAAuB;YAClC,MAAMV,QAAQW,IAAAA,kBAAI,EAAC;gBAAED;YAAG,GAAGP,cAAM,CAACC,GAAG,CAACC,UAAU,EAAE;gBAChDO,WAAWT,cAAM,CAACC,GAAG,CAACS,UAAU;gBAChCC,WAAW;YACb;YAEA,OAAOd;QACT;;AACF;AAEO,MAAMF,aAAa,IAAID"}